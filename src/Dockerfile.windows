ARG BASE_DIR=/durabletask
ARG NAME=durable_task_monitor
ARG VERSION=0.0

FROM golang:1.16.4-nanoserver AS builder
ARG BASE_DIR
ARG NAME
ARG VERSION
COPY cmd $BASE_DIR/cmd
COPY pkg $BASE_DIR/pkg
WORKDIR $BASE_DIR/pkg/common
RUN go test -v
WORKDIR $BASE_DIR/cmd/bash
# go mod tidy fails in windows CI due to permissions of module cache. Each dependency needs to be fetched with -modcacherw flag
# see golang.org/issue/31481
# RUN go mod tidy
RUN go get -modcacherw jenkinsci.org/plugins/durabletask/common
RUN go get -modcacherw golang.org/x/sys
# can't test bash on windows
RUN set CGO_ENABLED=0& set GOOS=darwin& set GOARCH=amd64& go build -a -o %NAME%_%VERSION%_darwin_amd_64
RUN set CGO_ENABLED=0& set GOOS=darwin& set GOARCH=arm64& go build -a -o %NAME%_%VERSION%_darwin_arm_64
RUN set CGO_ENABLED=0& set GOOS=linux& set GOARCH=amd64& go build -a -o %NAME%_%VERSION%_linux_64
RUN set CGO_ENABLED=0& set GOOS=linux& set GOARCH=386& go build -a -o %NAME%_%VERSION%_linux_32
# TODO: WINDOWS
# WORKDIR $BASE_DIR/cmd/windows
# RUN go mod tidy
# RUN go test -v

# TODO: uncomment once docker build --output (i.e. BuildKit) is available for windows containers
# see: https://github.com/microsoft/Windows-Containers/issues/34
# FROM mcr.microsoft.com/windows/nanoserver:20H2 as export-stage
# ARG BASE_DIR
# ARG NAME
# ARG VERSION
# WORKDIR $BASE_DIR
# COPY --from=builder $BASE_DIR/cmd/bash/${NAME}_${VERSION}_darwin_amd_64 $BASE_DIR
# COPY --from=builder $BASE_DIR/cmd/bash/${NAME}_${VERSION}_darwin_arm_64 $BASE_DIR
# COPY --from=builder $BASE_DIR/cmd/bash/${NAME}_${VERSION}_linux_64 $BASE_DIR
# COPY --from=builder $BASE_DIR/cmd/bash/${NAME}_${VERSION}_linux_32 $BASE_DIR
